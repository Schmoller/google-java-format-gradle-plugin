buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'com.github.sherter.googlejavaformatgradleplugin:google-java-format-gradle-plugin:0.3-SNAPSHOT'
    }
}

plugins {
    id 'groovy'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.9.1'
    id 'net.ltgt.apt' version '0.6'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'com.github.sherter.google-java-format'

version = file('src/main/resources/VERSION').text.trim()

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    jcenter()
}

sourceSets {
    integTest
}

configurations {
    integTestCompile.extendsFrom testCompile
    bundle
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile (project(':format')) {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    bundle      'com.google.dagger:dagger:2.3'
    compile     'com.google.dagger:dagger:2.3'
    apt         'com.google.guava:guava:19.0' // workaround https://github.com/tbroyer/gradle-apt-plugin/issues/22
    bundle      'com.google.guava:guava:19.0'
    apt         'com.google.dagger:dagger-compiler:2.3'
    compileOnly 'com.google.auto.value:auto-value:1.2'
    apt         'com.google.auto.value:auto-value:1.2'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        // gradle always loads its own groovy version, which leads to conflicts
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'com.google.jimfs:jimfs:1.1'
    integTestCompile project(':test')
    integTestCompile gradleTestKit()
    integTestCompile sourceSets.main.output
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
task shadedJar(type: ShadowJar) {
    configurations = [project.configurations.bundle]
    relocate('dagger', 'com.github.sherter.googlejavaformat.dagger')
    relocate('com.google.common', 'com.github.sherter.googlejavaformatgradleplugin.com.google.common')
    from(sourceSets.main.output, 'subprojects/format/build/classes/main')
    exclude('META-INF/maven/**/*')
}

allprojects {
  tasks.withType(Test) {
    maxParallelForks = System.env.TRAVIS == 'true' ? 1 : Runtime.runtime.availableProcessors()
    testLogging {
      events 'passed', 'skipped', 'failed'
      showStackTraces true
      exceptionFormat 'full'
    }
  }
}

def integTestGradleVersion = System.getenv('GRADLE_VERSION') ?: '2.0'

task integrationTest(type: Test, dependsOn: publishToMavenLocal) {
    group 'Verification'
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
    systemProperty 'GRADLE_VERSION', integTestGradleVersion
    reports.html.destination = new File(reportsDir, 'integrationTest' + File.separator + integTestGradleVersion)
}

tasks.googleJavaFormat {
    exclude 'src/integTest/resources'
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

pluginBundle {
    website = 'https://github.com/sherter/google-java-format-gradle-plugin'
    vcsUrl = 'https://github.com/sherter/google-java-format-gradle-plugin.git'
    description = 'Format your Java source files with google-java-format'
    tags = ['java', 'format', 'style']

    plugins {
        googleJavaFormatGradlePlugin {
            id = 'com.github.sherter.google-java-format'
            displayName = 'google-java-format gradle plugin'
        }
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.github.sherter.googlejavaformatgradleplugin'
            artifactId 'google-java-format-gradle-plugin'

            artifact tasks.shadedJar
        }
    }
    if (version.endsWith('-SNAPSHOT')) {
        repositories {
            maven {
                name = 'SonatypeSnapshot'
                url 'https://oss.sonatype.org/content/repositories/snapshots/'
                credentials {
                    username System.env.SONATYPE_SNAPSHOTS_USERNAME
                    password System.env.SONATYPE_SNAPSHOTS_PASSWORD
                }
            }
        }
    }
}
